package com.bax.euler;/*
 * Copyright 2016 MobileIron, Inc.
 * All rights reserved.
 */

import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import static org.testng.Assert.*;


/**
 * https://projecteuler.net/problem=2
 * <pre>
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million,
 * find the sum of the even-valued terms.
 * </pre>
 */
public class P002_EvenFibonacciNumbers {

    //cache first 1000 numbers
    long[] cache = new long[1000];

    @BeforeTest
    public void beforeTest() {
        cache[1] = 1;
        cache[2] = 2;
    }

    @Test
    public void solve() {
        int count = 1;
        long sum = 0;
        for (long i = fib(count); i <= 4_000_000L; i = fib(++count)) {
            if (i % 2 == 0) {
                sum += i;
            }
        }

        assertEquals(sum, 4613732);
    }

    private long fib(int i) {

        if(cache.length > i && cache[i] != 0) {
            return cache[i];
        }
        long result = fib(i - 1) + fib(i - 2);
        if(cache.length > i) {
            cache[i] = result;
        }
        return result;
    }
}
